"""Add flashcard system tables phase 1

Revision ID: 9a02a0698a51
Revises: 1a31ce608336
Create Date: 2025-09-17 21:38:20.854015

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '9a02a0698a51'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('folder',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_user_id', sa.Uuid(), nullable=False),
    sa.Column('parent_folder_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_user_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_folder_id'], ['folder.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_user_id', sa.Uuid(), nullable=False),
    sa.Column('folder_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], ['folder.id'], ),
    sa.ForeignKeyConstraint(['owner_user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flashcardset',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('status', sa.Enum('draft', 'published', name='setstatus'), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('author_user_id', sa.Uuid(), nullable=False),
    sa.Column('folder_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['author_user_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['folder_id'], ['folder.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class_flashcard_sets',
    sa.Column('class_id', sa.Uuid(), nullable=False),
    sa.Column('flashcard_set_id', sa.Uuid(), nullable=False),
    sa.Column('attached_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['attached_by'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flashcard_set_id'], ['flashcardset.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('class_id', 'flashcard_set_id')
    )
    op.create_table('classinvite',
    sa.Column('role', sa.Enum('admin', 'member', name='classinviterole'), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('class_id', sa.Uuid(), nullable=False),
    sa.Column('invitee_email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('invitee_user_id', sa.Uuid(), nullable=True),
    sa.Column('inviter_id', sa.Uuid(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'declined', 'expired', name='invitestatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['invitee_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['inviter_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('classmember',
    sa.Column('role', sa.Enum('owner', 'admin', 'member', name='classrole'), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('class_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('invited_by', sa.Uuid(), nullable=True),
    sa.Column('invited_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['invited_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flashcarditem',
    sa.Column('front_text', sa.Text(), nullable=True),
    sa.Column('back_text', sa.Text(), nullable=True),
    sa.Column('extra', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('flashcard_set_id', sa.Uuid(), nullable=False),
    sa.Column('created_by_user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flashcard_set_id'], ['flashcardset.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('generatedcontent',
    sa.Column('model_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('flashcard_set_id', sa.Uuid(), nullable=False),
    sa.Column('flashcard_item_id', sa.Uuid(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('model_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['flashcard_item_id'], ['flashcarditem.id'], ),
    sa.ForeignKeyConstraint(['flashcard_set_id'], ['flashcardset.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviewevent',
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('time_taken_ms', sa.Integer(), nullable=True),
    sa.Column('prev_interval', sa.Integer(), nullable=True),
    sa.Column('next_interval', sa.Integer(), nullable=True),
    sa.Column('algorithm_version', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('flashcard_item_id', sa.Uuid(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['flashcard_item_id'], ['flashcarditem.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usercardstate',
    sa.Column('ease_factor', sa.Float(), nullable=False),
    sa.Column('interval_days', sa.Integer(), nullable=False),
    sa.Column('streak', sa.Integer(), nullable=False),
    sa.Column('lapses', sa.Integer(), nullable=False),
    sa.Column('suspended', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('flashcard_set_id', sa.Uuid(), nullable=False),
    sa.Column('flashcard_item_id', sa.Uuid(), nullable=False),
    sa.Column('due_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['flashcard_item_id'], ['flashcarditem.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flashcard_set_id'], ['flashcardset.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('user', sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('user', sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('user', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('user', 'full_name')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('full_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_column('user', 'deleted_at')
    op.drop_column('user', 'created_at')
    op.drop_column('user', 'timezone')
    op.drop_column('user', 'display_name')
    op.drop_table('usercardstate')
    op.drop_table('reviewevent')
    op.drop_table('generatedcontent')
    op.drop_table('flashcarditem')
    op.drop_table('classmember')
    op.drop_table('classinvite')
    op.drop_table('class_flashcard_sets')
    op.drop_table('flashcardset')
    op.drop_table('class')
    op.drop_table('folder')
    # ### end Alembic commands ###
